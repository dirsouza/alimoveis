-- MySQL Script generated by MySQL Workbench
-- Sat Dec 16 22:19:48 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Table `tbuser`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbuser` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `desName` VARCHAR(100) NOT NULL,
  `desUser` VARCHAR(50) NOT NULL,
  `desEmail` VARCHAR(100) NOT NULL,
  `desPassword` VARCHAR(254) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `desUser_UNIQUE` (`desUser` ASC),
  UNIQUE INDEX `desEmail_UNIQUE` (`desEmail` ASC))
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbmaritalstatus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbmaritalstatus` (
  `idMaritalStatus` INT NOT NULL AUTO_INCREMENT,
  `desMaritalStatus` VARCHAR(50) NOT NULL,
  `desDescription` VARCHAR(254) NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idMaritalStatus`),
  UNIQUE INDEX `desMaritalStatus_UNIQUE` (`desMaritalStatus` ASC))
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbnation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbnation` (
  `idNation` INT NOT NULL AUTO_INCREMENT,
  `desNation` VARCHAR(50) NOT NULL,
  `desNationality` VARCHAR(50) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idNation`))
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tblocator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tblocator` (
  `idLocator` INT NOT NULL AUTO_INCREMENT,
  `desName` VARCHAR(100) NOT NULL,
  `idNation` INT NOT NULL,
  `idMaritalStatus` INT NOT NULL,
  `desProfession` VARCHAR(100) NOT NULL,
  `desRG` VARCHAR(20) NOT NULL,
  `desCPF` VARCHAR(14) NOT NULL,
  `desZipCode` VARCHAR(9) NOT NULL,
  `desAddress` VARCHAR(100) NOT NULL,
  `desNumber` VARCHAR(10) NOT NULL,
  `desDistrict` VARCHAR(100) NOT NULL,
  `desCity` VARCHAR(100) NOT NULL,
  `desState` CHAR(2) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idLocator`),
  UNIQUE INDEX `desCPF_UNIQUE` (`desCPF` ASC),
  INDEX `tblocator_tbmaritalstatus_PK` (`idMaritalStatus` ASC),
  INDEX `tblocator_tbnation_PK` (`idNation` ASC),
  CONSTRAINT `tblocator_tbmaritalstatus_FK`
    FOREIGN KEY (`idMaritalStatus`)
    REFERENCES `tbmaritalstatus` (`idMaritalStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tblocator_tbnation_FK`
    FOREIGN KEY (`idNation`)
    REFERENCES `tbnation` (`idNation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbrenter`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbrenter` (
  `idRenter` INT NOT NULL AUTO_INCREMENT,
  `desName` VARCHAR(100) NOT NULL,
  `idNation` INT NOT NULL,
  `idMaritalStatus` INT NOT NULL,
  `desCPF` VARCHAR(14) NOT NULL,
  `desProfession` VARCHAR(100) NOT NULL,
  `desRG` VARCHAR(20) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idRenter`),
  INDEX `tbrenter_tbmaritalstatus_PK` (`idMaritalStatus` ASC),
  INDEX `tbrenter_tbnation_PK` (`idNation` ASC),
  CONSTRAINT `tbrenter_tbmaritalstatus_FK`
    FOREIGN KEY (`idMaritalStatus`)
    REFERENCES `tbmaritalstatus` (`idMaritalStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tbrenter_tbnation_FK`
    FOREIGN KEY (`idNation`)
    REFERENCES `tbnation` (`idNation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbimmobile`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbimmobile` (
  `idImmobile` INT NOT NULL AUTO_INCREMENT,
  `desDescription` VARCHAR(100) NOT NULL,
  `desAddress` VARCHAR(100) NOT NULL,
  `desNumber` VARCHAR(10) NOT NULL,
  `desDistrict` VARCHAR(100) NOT NULL,
  `desZipCode` VARCHAR(9) NOT NULL,
  `desCity` VARCHAR(100) NOT NULL,
  `desState` CHAR(2) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idImmobile`),
  UNIQUE INDEX `desDescription_UNIQUE` (`desDescription` ASC))
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbcontract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbcontract` (
  `idContract` INT NOT NULL AUTO_INCREMENT,
  `desCode` VARCHAR(10) NOT NULL,
  `idLocator` INT NOT NULL,
  `idRenter` INT NOT NULL,
  `idImmobile` INT NOT NULL,
  `desDeadline` INT NOT NULL,
  `dtInitial` DATE NOT NULL,
  `dtFinal` DATE NOT NULL,
  `desValue` DOUBLE NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idContract`),
  INDEX `tbcontract_tblocator_PK` (`idLocator` ASC),
  INDEX `tbcontract_tbrenter_PK` (`idRenter` ASC),
  INDEX `tbcontract_tbimmobile_PK` (`idImmobile` ASC),
  CONSTRAINT `tbcontract_tblocator_FK`
    FOREIGN KEY (`idLocator`)
    REFERENCES `tblocator` (`idLocator`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tbcontract_tbrenter_FK`
    FOREIGN KEY (`idRenter`)
    REFERENCES `tbrenter` (`idRenter`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tbcontract_tbimmobile_FK`
    FOREIGN KEY (`idImmobile`)
    REFERENCES `tbimmobile` (`idImmobile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbreceipt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbreceipt` (
  `idReceipt` INT NOT NULL AUTO_INCREMENT,
  `desCode` VARCHAR(15) NOT NULL,
  `idContract` INT NOT NULL,
  `desPaymentInterest` INT NULL,
  `desMonth` VARCHAR(50) NOT NULL,
  `dtSignature` DATE NOT NULL,
  `desPayment` CHAR(1) NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idReceipt`),
  INDEX `tbreceipt_tbcontract_PK` (`idContract` ASC),
  CONSTRAINT `tbreceipt_tbcontract_FK`
    FOREIGN KEY (`idContract`)
    REFERENCES `tbcontract` (`idContract`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbdiscount`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbdiscount` (
  `idDiscount` INT NOT NULL AUTO_INCREMENT,
  `desDescription` VARCHAR(256) NOT NULL,
  `idContract` INT NOT NULL,
  `desValue` DOUBLE NOT NULL,
  `desPortion` INT NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idDiscount`),
  INDEX `tbdiscount_tbcontract_PK` (`idContract` ASC),
  CONSTRAINT `tbdiscount_tbcontract_FK`
    FOREIGN KEY (`idContract`)
    REFERENCES `tbcontract` (`idContract`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;


-- -----------------------------------------------------
-- Table `tbportions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tbportions` (
  `idPortions` INT NOT NULL AUTO_INCREMENT,
  `idDiscount` INT NOT NULL,
  `desPortion` VARCHAR(5) NOT NULL,
  `dtMaturity` DATE NOT NULL,
  `desValue` DOUBLE NOT NULL,
  `desPayment` CHAR(1) NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPortions`),
  INDEX `tbportions_tbdiscount_PK` (`idDiscount` ASC),
  CONSTRAINT `tbportions_tbdiscount_FK`
    FOREIGN KEY (`idDiscount`)
    REFERENCES `tbdiscount` (`idDiscount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = MyISAM;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `tbuser`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `tbuser` (`idUser`, `desName`, `desUser`, `desEmail`, `desPassword`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Administrador', 'admin', 'diogo.souza@msn.com', '$2y$12$srYtqZXZ78KFULqweqnCuO2s/Uzn42.F4UNylYtdcQAlr8VsBs15m', DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbmaritalstatus`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `tbmaritalstatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Solteiro(a)', 'Que nunca se casou, ou que teve o casamento anulado.', DEFAULT, DEFAULT);
INSERT INTO `tbmaritalstatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Casado(a)', 'Que contraiu matrim√¥nio, independente do regime de bens adotado.', DEFAULT, DEFAULT);
INSERT INTO `tbmaritalstatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Divorciado(a)', 'Ap√≥s homologa√ß√£o do div√≥rcio pela justi√ßa ou por uma escritura p√∫blica.', DEFAULT, DEFAULT);
INSERT INTO `tbmaritalstatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Separado(a)', 'Pessoa cujo v√≠nculo jur√≠dico do casamento existe, mas foi dissolvida por escritura p√∫blica ou decis√£o judicial a sociedade conjugal.', DEFAULT, DEFAULT);
INSERT INTO `tbmaritalstatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Uni√£o Est√°vel', 'Condi√ß√£o de conviv√™ncia familiar entre pessoas que n√£o possuem impedimento ao casamento.', DEFAULT, DEFAULT);
INSERT INTO `tbmaritalstatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Vi√∫vo(a)', 'Pessoa cujo c√¥njuge faleceu.', DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `tbnation`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Alemanha', 'Alem√£o(√£)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Estados Unidos', 'Americano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Angola', 'Angolano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Arg√©lia', 'Argelino(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Austr√°lia', 'Australiano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Brasil', 'Brasileiro(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Cabo Verde', 'Cabo-verdiano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'China', 'Chin√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Dinamarca', 'Dinamarqu√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Espanha', 'Espanhol(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Fran√ßa', 'Franc√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Gr√©cia', 'Grego(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Guin√© Bissau', 'Guineense', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Holanda', 'holand√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Inglaterra', 'ingl√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Irlanda', 'irland√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'It√°lia', 'Italiano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Jap√£o', 'Japon√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Marrocos', 'Marroquino(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Mo√ßambique', 'Mo√ßambicano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Nova Zel√¢ndia', 'Neozeland√©s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Noruega', 'Noruegu√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Palestina', 'Palestiniano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Pol√≥nia', 'Polaco(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Portugal', 'Portugu√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'R√∫ssia', 'Russo(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'S√£o Tom√© e Pr√≠ncipe', 'S√£o-tomense', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Su√©cia', 'Sueco(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Su√≠√ßa', 'Su√≠√ßo(eca)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Tail√¢ndia', 'Tailand√™s(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Timor', 'Timorense', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Venezuela', 'Venezuelano(a)', DEFAULT, DEFAULT);
INSERT INTO `tbnation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Vietname', 'Vietnamita', DEFAULT, DEFAULT);

COMMIT;

