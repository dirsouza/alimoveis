-- MySQL Script generated by MySQL Workbench
-- Thu Nov 30 14:02:20 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dbALImoveis
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dbALImoveis
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dbALImoveis` DEFAULT CHARACTER SET utf8 ;
USE `dbALImoveis` ;

-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbUser`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbUser` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbUser` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `desName` VARCHAR(100) NOT NULL,
  `desUser` VARCHAR(50) NOT NULL,
  `desEmail` VARCHAR(100) NOT NULL,
  `desPassword` VARCHAR(254) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `desUser_UNIQUE` (`desUser` ASC),
  UNIQUE INDEX `desEmail_UNIQUE` (`desEmail` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbMaritalStatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbMaritalStatus` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbMaritalStatus` (
  `idMaritalStatus` INT NOT NULL AUTO_INCREMENT,
  `desMaritalStatus` VARCHAR(50) NOT NULL,
  `desDescription` VARCHAR(254) NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idMaritalStatus`),
  UNIQUE INDEX `desMaritalStatus_UNIQUE` (`desMaritalStatus` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbNation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbNation` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbNation` (
  `idNation` INT NOT NULL AUTO_INCREMENT,
  `desNation` VARCHAR(50) NOT NULL,
  `desNationality` VARCHAR(50) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idNation`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbLocator`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbLocator` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbLocator` (
  `idLocator` INT NOT NULL AUTO_INCREMENT,
  `desName` VARCHAR(100) NOT NULL,
  `idNation` INT NOT NULL,
  `idMaritalStatus` INT NOT NULL,
  `desProfession` VARCHAR(100) NOT NULL,
  `desRG` VARCHAR(20) NOT NULL,
  `desCPF` VARCHAR(14) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idLocator`),
  UNIQUE INDEX `desCPF_UNIQUE` (`desCPF` ASC),
  INDEX `tbLocator_tbMaritalStatus_PK` (`idMaritalStatus` ASC),
  INDEX `tbLocator_tbNation_PK` (`idNation` ASC),
  CONSTRAINT `tbLocator_tbMaritalStatus_FK`
    FOREIGN KEY (`idMaritalStatus`)
    REFERENCES `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tbLocator_tbNation_FK`
    FOREIGN KEY (`idNation`)
    REFERENCES `dbALImoveis`.`tbNation` (`idNation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbRenter`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbRenter` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbRenter` (
  `idRenter` INT NOT NULL AUTO_INCREMENT,
  `desName` VARCHAR(100) NOT NULL,
  `idNation` INT NOT NULL,
  `idMaritalStatus` INT NOT NULL,
  `desProfession` VARCHAR(100) NOT NULL,
  `desCPF` VARCHAR(14) NOT NULL,
  `desRG` VARCHAR(20) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idRenter`),
  INDEX `tbRenter_tbMaritalStatus_PK` (`idMaritalStatus` ASC),
  INDEX `tbRenter_tbNation_PK` (`idNation` ASC),
  CONSTRAINT `tbRenter_tbMaritalStatus_FK`
    FOREIGN KEY (`idMaritalStatus`)
    REFERENCES `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tbRenter_tbNation_FK`
    FOREIGN KEY (`idNation`)
    REFERENCES `dbALImoveis`.`tbNation` (`idNation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbImmobile`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbImmobile` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbImmobile` (
  `idImmobile` INT NOT NULL AUTO_INCREMENT,
  `desDescription` VARCHAR(100) NOT NULL,
  `desAddress` VARCHAR(100) NOT NULL,
  `desNumber` VARCHAR(10) NOT NULL,
  `desDistrict` VARCHAR(100) NOT NULL,
  `desZipCode` VARCHAR(9) NOT NULL,
  `desCity` VARCHAR(100) NOT NULL,
  `desState` VARCHAR(100) NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idImmobile`),
  UNIQUE INDEX `desDescription_UNIQUE` (`desDescription` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbContract`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbContract` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbContract` (
  `idContract` INT NOT NULL AUTO_INCREMENT,
  `desCode` VARCHAR(10) NOT NULL,
  `idLocator` INT NOT NULL,
  `idRenter` INT NOT NULL,
  `idImmobile` INT NOT NULL,
  `desDeadline` INT NOT NULL,
  `dtInitial` DATE NOT NULL,
  `dtFinal` DATE NOT NULL,
  `desValue` DOUBLE NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idContract`),
  INDEX `tbContract_tbLocator_PK` (`idLocator` ASC),
  INDEX `tbContract_tbRenter_PK` (`idRenter` ASC),
  INDEX `tbContract_tbImmobile_PK` (`idImmobile` ASC),
  CONSTRAINT `tbContract_tbLocator_FK`
    FOREIGN KEY (`idLocator`)
    REFERENCES `dbALImoveis`.`tbLocator` (`idLocator`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tbContract_tbRenter_FK`
    FOREIGN KEY (`idRenter`)
    REFERENCES `dbALImoveis`.`tbRenter` (`idRenter`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `tbContract_tbImmobile_FK`
    FOREIGN KEY (`idImmobile`)
    REFERENCES `dbALImoveis`.`tbImmobile` (`idImmobile`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbReceipt`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbReceipt` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbReceipt` (
  `idReceipt` INT NOT NULL AUTO_INCREMENT,
  `desCode` VARCHAR(15) NOT NULL,
  `idContract` INT NOT NULL,
  `desPaymentInterest` INT NULL,
  `desMonth` VARCHAR(50) NOT NULL,
  `dtSignature` DATE NOT NULL,
  `desPayment` CHAR(1) NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idReceipt`),
  INDEX `tbReceipt_tbContract_PK` (`idContract` ASC),
  CONSTRAINT `tbReceipt_tbContract_FK`
    FOREIGN KEY (`idContract`)
    REFERENCES `dbALImoveis`.`tbContract` (`idContract`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbDiscount`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbDiscount` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbDiscount` (
  `idDiscount` INT NOT NULL AUTO_INCREMENT,
  `desDescription` VARCHAR(256) NOT NULL,
  `idContract` INT NOT NULL,
  `desValue` DOUBLE NOT NULL,
  `desPortion` INT NOT NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idDiscount`),
  INDEX `tbDiscount_tbContract_PK` (`idContract` ASC),
  CONSTRAINT `tbDiscount_tbContract_FK`
    FOREIGN KEY (`idContract`)
    REFERENCES `dbALImoveis`.`tbContract` (`idContract`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dbALImoveis`.`tbPortions`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dbALImoveis`.`tbPortions` ;

CREATE TABLE IF NOT EXISTS `dbALImoveis`.`tbPortions` (
  `idPortions` INT NOT NULL AUTO_INCREMENT,
  `idDiscount` INT NOT NULL,
  `desPortion` VARCHAR(5) NOT NULL,
  `dtMaturity` DATE NOT NULL,
  `desValue` DOUBLE NOT NULL,
  `desPayment` CHAR(1) NULL,
  `dtRegister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `dtUpdate` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`idPortions`),
  INDEX `tbPortions_tbDiscount_PK` (`idDiscount` ASC),
  CONSTRAINT `tbPortions_tbDiscount_FK`
    FOREIGN KEY (`idDiscount`)
    REFERENCES `dbALImoveis`.`tbDiscount` (`idDiscount`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `dbALImoveis`.`tbUser`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbALImoveis`;
INSERT INTO `dbALImoveis`.`tbUser` (`idUser`, `desName`, `desUser`, `desEmail`, `desPassword`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Administrador', 'admin', 'diogo.souza@msn.com', '$2y$12$srYtqZXZ78KFULqweqnCuO2s/Uzn42.F4UNylYtdcQAlr8VsBs15m', DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `dbALImoveis`.`tbMaritalStatus`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbALImoveis`;
INSERT INTO `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Solteiro(a)', 'Que nunca se casou, ou que teve o casamento anulado.', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Casado(a)', 'Que contraiu matrimônio, independente do regime de bens adotado.', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Divorciado(a)', 'Após homologação do divórcio pela justiça ou por uma escritura pública.', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Separado(a)', 'Pessoa cujo vínculo jurídico do casamento existe, mas foi dissolvida por escritura pública ou decisão judicial a sociedade conjugal.', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'União Estável', 'Condição de convivência familiar entre pessoas que não possuem impedimento ao casamento.', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbMaritalStatus` (`idMaritalStatus`, `desMaritalStatus`, `desDescription`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Viúvo(a)', 'Pessoa cujo cônjuge faleceu.', DEFAULT, DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `dbALImoveis`.`tbNation`
-- -----------------------------------------------------
START TRANSACTION;
USE `dbALImoveis`;
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Alemanha', 'Alemão(ã)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Estados Unidos', 'Americano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Angola', 'Angolano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Argélia', 'Argelino(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Austrália', 'Australiano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Brasil', 'Brasileiro(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Cabo Verde', 'Cabo-verdiano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'China', 'Chinês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Dinamarca', 'Dinamarquês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Espanha', 'Espanhol(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'França', 'Francês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Grécia', 'Grego(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Guiné Bissau', 'Guineense', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Holanda', 'holandês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Inglaterra', 'inglês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Irlanda', 'irlandês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Itália', 'Italiano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Japão', 'Japonês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Marrocos', 'Marroquino(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Moçambique', 'Moçambicano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Nova Zelândia', 'Neozelandés(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Noruega', 'Norueguês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Palestina', 'Palestiniano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Polónia', 'Polaco(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Portugal', 'Português(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Rússia', 'Russo(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'São Tomé e Príncipe', 'São-tomense', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Suécia', 'Sueco(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Suíça', 'Suíço(eca)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Tailândia', 'Tailandês(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Timor', 'Timorense', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Venezuela', 'Venezuelano(a)', DEFAULT, DEFAULT);
INSERT INTO `dbALImoveis`.`tbNation` (`idNation`, `desNation`, `desNationality`, `dtRegister`, `dtUpdate`) VALUES (DEFAULT, 'Vietname', 'Vietnamita', DEFAULT, DEFAULT);

COMMIT;

